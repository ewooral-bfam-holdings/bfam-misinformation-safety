# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff (if applicable):
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff (if applicable):
instance/
.webassets-cache

# Scrapy stuff (if applicable):
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments and secrets
#.env
#.env.local
.env.development
.env.test
.env.production
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Database files
*.sqlite
*.sqlite3
*.db

# Redis dump file
dump.rdb

# Log files
*.log
logs/
log/

# Temporary files
*.tmp
*.temp
.tmp/
.temp/

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows specific
desktop.ini
$RECYCLE.BIN/

# IDE and Editor files
.vscode/
.idea/
*.swp
*.swo
*~

# Docker
.dockerignore

# SSL certificates and keys
*.pem
*.key
*.crt
*.cert
*.p12
*.pfx

# Backup files
*.bak
*.backup
*.old

# Configuration files with sensitive data
config.ini
settings.ini
secrets.json
credentials.json

# Upload directories
uploads/
media/
static/collected/

# Node.js (if you have any frontend components)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.npm
.yarn-integrity

# AWS specific
.aws/

# Google Cloud specific
.gcloud/

# Terraform
*.tfstate
*.tfstate.*
.terraform/

# Local development files
.local
local/

# Session files
flask_session/

# SQLAlchemy migration versions (be careful with this - you might want to track some)
# alembic/versions/*.py

# Application specific uploads and data
data/
files/
storage/

# Monitoring and profiling
*.prof
*.profile

# Memory dumps
*.mdmp
*.dump

# Application logs
app.log
error.log
access.log

# Process IDs
*.pid

# Coverage reports
htmlcov/
.coverage

# Pytest
.pytest_cache/

# Mypy cache
.mypy_cache/

# Bandit security scanner
.bandit

# Safety security scanner
safety-report.json

# Local environment overrides
.env.override